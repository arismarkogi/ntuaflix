Command Line Interface - CLI
Οι προδιαγραφές του CLI περιλαμβάνουν κλήσεις οι οποίες είναι ισοδύναμες με εκείνες του REST API.
Το CLI πρέπει να είναι διαθέσιμο μόνο από την κονσόλα (command line, ssh) του συστήματος που
φιλοξενεί την εφαρμογή που θα κατασκευάσετε. Λογαριασμοί χρηστών, εφόσον υλοποιηθούν,
δημιουργούνται μόνο μέσω του CLI.
Το CLI θα υποστηρίζει τον μορφότυπο JSON και τον μορφότυπο CSV, όπως ακριβώς και στο REST API.
Η επιλογή του μορφότυπου θα καθορίζεται σε προαιρετική παράμετρο όπως αναφέρεται πιο κάτω.
Το CLI θα καλείται από τη γραμμή εντολών με κλήσεις της μορφής:
$ se23XX scope --param1 value1 [--param2 value2 ...] --format fff
Όπου XX το αναγνωριστικό της ομάδας σας και SCOPE όπως αναφέρεται στον πίνακα που ακολουθεί.
Σε περίπτωση που δεν δίνονται παράμετροι, θα πρέπει να εμφανίζονται οι υποστηριζόμενες από το
CLI παράμετροι για όλα τα scopes.
Θα πρέπει να υποστηρίζονται οι ακόλουθες παράμετροι ανά scope.
Scope Απαιτείται διαπίστευση
χρήστη (*)
Υποχρεωτικές λοιπές
παράμετροι Αντίστοιχη κλήση REST API
login (*) --username
--passw
/login
logout (*) Ναι - /logout
adduser (*) Ναι --username
--passw
/admin/usermod/:username/:password
user (*) Ναι --username /admin/users/:username
healthcheck Ναι - /admin/healthcheck
resetall Ναι - /admin/resetall
newtitles Ναι --filename /admin/upload/titlebasics
newakas Ναι --filename /admin/upload/titleakas
newnames Ναι --filename /admin/upload/namebasics
newcrew Ναι --filename /admin/upload/titlecrew
newepisode Ναι --filename /admin/upload/titleepisode
newprincipals Ναι --filename /admin/upload/titleprincipals
newratings Ναι --filename /admin/upload/titleratings
title Ναι --titleID /title/:titleID
searchtitle Ναι --titlepart /searchtitle
bygenre Ναι
--genre
--min
(--from)
(--to)
/bygenre
name Ναι --nameid /name/:nameID
searchname Ναι --name /searchname
(*) εφόσον υλοποιηθεί διαχείριση λογαριασμών χρηστών
Η παράμετρος --format είναι προαιρετική. Αν δεν δηλώνεται λαμβάνεται η default τιμή "json".
Διαφορετικά, μπορεί να έχει τιμή json ή csv 


this is my cli.

can tou create a script with mocha for me to test it

ChatGPT
Certainly! To create a script using Mocha for testing your CLI, you can follow the steps below. Note that this is a basic example, and you may need to adjust it based on the actual structure and behavior of your CLI application.

First, make sure you have Mocha and Chai installed. You can install them using npm:

bash
Copy code
npm install --save-dev mocha chai
Now, create a test script, let's call it cli.test.js:

javascript
Copy code
const { execSync } = require('child_process');
const { expect } = require('chai');

describe('CLI Tests', () => {
  it('should return help message if no parameters provided', () => {
    const output = execSync('node your-cli-script.js').toString();
    expect(output).to.include('Supported parameters for all scopes:');
  });

  it('should handle login command', () => {
    const output = execSync('node your-cli-script.js se23XX login --username testuser --passw testpassword').toString();
    expect(output).to.include('Login successful');
  });

  it('should handle logout command', () => {
    const output = execSync('node your-cli-script.js se23XX logout').toString();
    expect(output).to.include('Logout successful');
  });

  // Add more test cases for other commands and parameters...

  // Example for testing JSON format
  it('should handle title command with JSON format', () => {
    const output = execSync('node your-cli-script.js se23XX title --titleID 123 --format json').toString();
    const parsedOutput = JSON.parse(output);
    expect(parsedOutput).to.have.property('titleID').to.equal(123);
  });

  // Example for testing CSV format
  it('should handle title command with CSV format', () => {
    const output = execSync('node your-cli-script.js se23XX title --titleID 123 --format csv').toString();
    // Add assertions for CSV format output...
  });
});
Replace 'your-cli-script.js' with the actual filename of your CLI script. Adjust the test cases based on your CLI commands and expected output.

To run the tests, you can use the following command:

bash
Copy code
npx mocha cli.test.js
Make sure your CLI application is designed to handle command-line arguments and output results accordingly for successful testing.
